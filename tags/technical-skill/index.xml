<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Technical Skill on Ahmad Adillaumam</title>
    <link>https://wewnumam.github.io/tags/technical-skill/</link>
    <description>Recent content in Technical Skill on Ahmad Adillaumam</description>
    <image>
      <url>https://wewnumam.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph</url>
      <link>https://wewnumam.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Jan 2023 05:27:25 +0000</lastBuildDate><atom:link href="https://wewnumam.github.io/tags/technical-skill/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>5 Tips for Writing Clear and Concise Git Commit Messages</title>
      <link>https://wewnumam.github.io/articles/5-tips-for-writing-clear-and-concise-git-commit-messages/</link>
      <pubDate>Sun, 01 Jan 2023 05:27:25 +0000</pubDate>
      
      <guid>https://wewnumam.github.io/articles/5-tips-for-writing-clear-and-concise-git-commit-messages/</guid>
      <description>Writing good commit messages is an important practice that can help other people understand the changes that you have made and why. Here are some tips for writing better commit messages:
Use a clear and descriptive subject line The first line of the commit message should be a short and concise summary of the changes that you have made. Keep it to around 50 characters or less. This will help other developers quickly understand the changes that you have made.</description>
    </item>
    
    <item>
      <title>5 Tips for Creating Clean Code</title>
      <link>https://wewnumam.github.io/articles/5-tips-for-creating-clean-code/</link>
      <pubDate>Thu, 29 Dec 2022 05:39:10 +0700</pubDate>
      
      <guid>https://wewnumam.github.io/articles/5-tips-for-creating-clean-code/</guid>
      <description>Clean code is code that is easy to read, understand, and maintain. It follows a set of coding standards and principles that aim to make the code as readable and maintainable as possible.
Clean code is important because it helps reduce the time and effort required to understand and modify the codebase, and it makes it easier to add new features or fix bugs. It also promotes collaboration and reduces the risk of introducing new issues when modifying the code.</description>
    </item>
    
    <item>
      <title>The Power of Variable Names</title>
      <link>https://wewnumam.github.io/articles/the-power-of-variable-names/</link>
      <pubDate>Fri, 16 Dec 2022 09:22:51 +0700</pubDate>
      
      <guid>https://wewnumam.github.io/articles/the-power-of-variable-names/</guid>
      <description>Meaningful Variable Names Choosing good names takes time but saves more than it takes.
Intention-Revealing Names The name should answer all big questions. It should tell you why it exists, what it does, and how it is used. If the name requires a comment, the name does not reveal the intent.
let d; // elapsed time in days We should choose the name that specifies what is being measured and the unit of that measurement:</description>
    </item>
    
  </channel>
</rss>
