<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Programming on Ahmad Adillaumam</title>
    <link>https://wewnumam.github.io/id/tags/programming/</link>
    <description>Recent content in Programming on Ahmad Adillaumam</description>
    <image>
      <url>https://wewnumam.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph</url>
      <link>https://wewnumam.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 29 Dec 2022 05:39:14 +0700</lastBuildDate><atom:link href="https://wewnumam.github.io/id/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>5 Tips untuk Membuat Kode yang Bersih</title>
      <link>https://wewnumam.github.io/id/articles/5-tips-for-creating-clean-code/</link>
      <pubDate>Thu, 29 Dec 2022 05:39:14 +0700</pubDate>
      
      <guid>https://wewnumam.github.io/id/articles/5-tips-for-creating-clean-code/</guid>
      <description>Clean code adalah kode yang mudah dibaca, dipahami, dan dikelola. Kode bersih mengikuti seperangkat standar dan prinsip pengkodean yang bertujuan untuk membuat kode dapat dimengerti dan dirawat sebaik mungkin.
Clean code penting karena membantu mengurangi waktu dan upaya yang diperlukan untuk memahami dan memodifikasi basis kode, dan membuatnya lebih mudah untuk menambahkan fitur baru atau memperbaiki bug. Ini juga mendukung kolaborasi dan mengurangi risiko memperkenalkan masalah baru saat memodifikasi kode.</description>
    </item>
    
    <item>
      <title>Syntatic Sugars | Fitur Tersembunyi C#</title>
      <link>https://wewnumam.github.io/id/articles/syntatic-sugars-csharp-hidden-features/</link>
      <pubDate>Thu, 22 Dec 2022 18:24:06 +0700</pubDate>
      
      <guid>https://wewnumam.github.io/id/articles/syntatic-sugars-csharp-hidden-features/</guid>
      <description>Catatan:
Untuk dapat menggunakan fitur-fitur ini, kita membutuhkan setidaknya C# versi 7 ke atas atau Unity 2018 ke atas.
Ternary Operator Dalam pemrograman komputer, ternary operator adalah merupakan bagian dari sintaks untuk ekspresi kondisional dasar dalam beberapa bahasa pemrograman, biasanya disebut sebagai operator kondisional, ternary if, atau inline if.
Sebuah ekspresi a ? b : c dievaluasi ke b jika nilai a benar, dan sebaliknya ke c. Atau secara singkat: &amp;ldquo;jika a maka b jika tidak maka c&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Dahsyatnya Fungsi Nama Variabel</title>
      <link>https://wewnumam.github.io/id/articles/the-power-of-variable-names/</link>
      <pubDate>Fri, 16 Dec 2022 09:22:51 +0700</pubDate>
      
      <guid>https://wewnumam.github.io/id/articles/the-power-of-variable-names/</guid>
      <description>Nama Variabel yang Bermakna Memilih nama yang baik membutuhkan waktu tetapi menghemat lebih banyak daripada yang dibutuhkan.
Nama yang Mengungkapkan Niat Nama harus menjawab semua pertanyaan besar. Nama harus memberitahu kita mengapa variabel itu ada, apa yang dilakukannya, dan bagaimana penggunaannya. Jika nama tersebut membutuhkan komentar, maka nama tersebut tidak mengungkapkan maksudnya.
let d; // waktu yang berlalu dalam hari Kita harus memilih nama yang menentukan apa yang sedang diukur dan unit pengukuran itu:</description>
    </item>
    
  </channel>
</rss>
